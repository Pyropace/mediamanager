<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core"/>
    </sectionGroup>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Media.AppHelpers.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>
  </configSections>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v4.0"/>
  </startup>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SQLite" />
      <add name="SQLite Data Provider" invariant="System.Data.SQLite"
           description=".Net Framework Data Provider for SQLite"
           type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite" />
    </DbProviderFactories>
  </system.data>
  <appSettings file="local.config">
    <add key="accessKeyId" value="xxx"/>
    <add key="secretKey" value="yyy"/>
    <add key="tvrage.apiKey" value="02ZTsYVKmblGsn5Zg0tK"/>
  </appSettings>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory name="">
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SQLite20Driver</property>
      <property name="connection.connection_string">Data Source=media.db;Version=3</property>
      <property name="dialect">NHibernate.Dialect.SQLiteDialect</property>
      <property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
      <mapping assembly='Media.BE'/>
    </session-factory>
  </hibernate-configuration>

  <spring>
    <context type="Spring.Context.Support.XmlApplicationContext, Spring.Core">
      <resource uri="config://spring/objects"/>
    </context>
    <objects xmlns="http://www.springframework.net">
      <object type="Spring.Objects.Factory.Config.VariablePlaceholderConfigurer, Spring.Core">
        <property name="VariableSources">
          <list>
            <object type="Spring.Objects.Factory.Config.ConfigSectionVariableSource, Spring.Core">
              <constructor-arg name="sectionName" value="appSettings"/>
            </object>
            <object type="Spring.Objects.Factory.Config.ConnectionStringsVariableSource, Spring.Core"/>
          </list>
        </property>
      </object>
      <object name="SeasonHelperFactory" type="Media.BC.SeasonHelperFactory, Media.BC">
        <property name="SeasonHelpers">
          <dictionary>
            <entry key="Tv.Com">
              <object type="Media.AppHelpers.Tv.Com.TvComSeasonHelper, Media.AppHelpers"/>
            </entry>
          </dictionary>
        </property>
      </object>
      <object id="movieMediaItem" type="Media.BE.MediaItem, Media.BE" singleton="false">
        <property name="Type" value="Movie"/>
        <property name="Components">
          <dictionary>
            <entry key="GeneralInformation">
              <object type="Media.BE.MediaGeneralInformation, Media.BE" singleton="false"/>
            </entry>
          </dictionary>
        </property>
      </object>
      <object id="tvshowMediaItem" type="Media.BE.TvSeries, Media.BE" singleton="false">
        <property name="Type" value="Tv Series"/>
        <property name="Components">
          <dictionary>
            <entry key="GeneralInformation">
              <object type="Media.BE.MediaGeneralInformation, Media.BE" singleton="false"/>
            </entry>
          </dictionary>
        </property>
      </object>
      <object name="MovieEditor" type="MediaManager2.TabbedMediaItemEditor, MediaManager2">
        <property name="Editors">
          <list>
            <object type="MediaManager2.GeneralInformation, MediaManager2">
              <property name="Text" value="General Information"/>
            </object>
          </list>
        </property>
      </object>
      <object name="EpisodeMaintenance" type="MediaManager2.EpisodeMaintenance, MediaManager2">
        <property name="Text" value="Seasons"/>
        <property name="SeasonHelperFactory" ref="SeasonHelperFactory"/>
      </object>
      <object name="TvShowEditor" type="MediaManager2.TabbedMediaItemEditor, MediaManager2">
        <property name="Editors">
          <list>
            <object type="MediaManager2.GeneralInformation, MediaManager2">
              <property name="Text" value="General Information"/>
            </object>
            <ref object="EpisodeMaintenance"/>
          </list>
        </property>
      </object>
      <object name="TvShowProvider" type="MediaManager2.MediaTypeProvider, MediaManager2">
        <property name="MediaItemFactory" ref="TvShowMediaItemFactory"/>
        <property name="Name" value="Tv Series"/>
        <property name="Editor" ref="TvShowEditor"/>
        <property name="IconName24x24" value="plasma_tv24"/>
        <property name="AppHelpers">
          <list>
            <object type="Media.AppHelpers.TvRage.AppHelper, Media.AppHelpers">
              <constructor-arg name="key" value="${tvrage.apiKey}"/>
            </object>
            <object type="Media.AppHelpers.EpGuides.AppHelper, Media.AppHelpers">
            </object>
            <object type="Media.AppHelpers.Amazon.AppHelper, Media.AppHelpers">
              <constructor-arg name="accessKeyId" value="${accessKeyId}"/>
              <constructor-arg name="secretKey" value="${secretKey}"/>
            </object>
          </list>
        </property>
      </object>

      <object id="TvShowMediaItemFactory" type="Spring.Objects.Factory.Config.ObjectFactoryCreatingFactoryObject">
        <property name="TargetObjectName">
          <idref local="tvshowMediaItem"/>
        </property>
      </object>

      <object name="MovieProvider" type="MediaManager2.MediaTypeProvider, MediaManager2">
        <property name="MediaItemFactory" ref="MovieMediaItemFactory"/>
        <property name="Name" value="Movie"/>
        <property name="Editor" ref="MovieEditor"/>
        <property name="IconName24x24" value="film24"/>
        <property name="AppHelpers">
          <list>
            <object type="Media.AppHelpers.Imdb.AppHelper, Media.AppHelpers">
            </object>
            <object type="Media.AppHelpers.Amazon.AppHelper, Media.AppHelpers">
              <constructor-arg name="accessKeyId" value="${accessKeyId}"/>
              <constructor-arg name="secretKey" value="${secretKey}"/>
            </object>
          </list>
        </property>
      </object>

      <object id="MovieMediaItemFactory" type="Spring.Objects.Factory.Config.ObjectFactoryCreatingFactoryObject">
        <property name="TargetObjectName">
          <idref local="movieMediaItem"/>
        </property>
      </object>

    </objects>
  </spring>
  <!-- This section contains the log4net configuration settings -->
  <!-- This section contains the log4net configuration settings -->
  <log4net debug="true">

    <!-- Define some output appenders -->
    <appender name="trace" type="log4net.Appender.TraceAppender, log4net">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>

    <appender name="console" type="log4net.Appender.ConsoleAppender, log4net">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>
    <appender name="udp" type="log4net.Appender.UdpAppender">
      <param name="RemoteAddress" value="127.0.0.1"/>
      <param name="RemotePort" value="8080"/>
      <layout type="log4net.Layout.XmlLayout">
        <param name="Prefix" value=""/>
      </layout>
    </appender>
    <appender name="rollingFile" type="log4net.Appender.RollingFileAppender,log4net">

      <param name="File" value="log.txt"/>
      <param name="AppendToFile" value="true"/>
      <param name="RollingStyle" value="Date"/>
      <param name="DatePattern" value="yyyy.MM.dd"/>
      <param name="StaticLogFileName" value="true"/>

      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>

    <!-- Setup the root category, add the appenders and set the default priority -->

    <root>
      <priority value="WARN"/>
      <appender-ref ref=""/>
    </root>
    <!-- 
    <logger name="NHibernate">
      <level value="DEBUG" />
      <appender-ref ref="udp" />
    </logger> -->
  </log4net>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="AWSECommerceServiceBinding" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
          maxBufferSize="6553600" maxBufferPoolSize="524288" maxReceivedMessageSize="6553600"
          messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
          useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="819200" maxArrayLength="16384"
            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="Transport">
            <transport clientCredentialType="Windows" proxyCredentialType="Windows"
              realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
        <binding name="AWSECommerceServiceBinding1" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
          maxBufferSize="6553600" maxBufferPoolSize="524288" maxReceivedMessageSize="6553600"
          messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
          useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="819200" maxArrayLength="16384"
            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None"
              realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="https://ecs.amazonaws.com/onca/soap?Service=AWSECommerceService"
        binding="basicHttpBinding" bindingConfiguration="AWSECommerceServiceBinding"
        contract="Amazon.AWSECommerceServicePortType" name="AWSECommerceServicePort" />
    </client>
  </system.serviceModel>

</configuration>
